{"version":3,"sources":["db.js","collections.js","Components/Products.js","Components/Dashboard.js","Components/Categories.js","Components/Orders.js","Components/Home.js","App.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","storage","getStorage","categoriesCollectionRef","collection","itemsCollectionsRef","ordersCollectionsRef","withStyles","root","padding","title","textAlign","imageStyle","width","height","starterText","fontSize","categoryTextGrid","paddingBottom","categoryContainerGrid","btnStarterGrid","backBtn","cursor","withTheme","props","classes","category","userRole","guestUser","useState","apDialogState","setAPState","items","setItems","recipeName","setRecipeName","stock","setStock","price","setPrice","cost","setCost","addOns","setAddOns","isEdit","setIsEdit","selectedItemForEdit","setItemForEdit","haveSizes","setHaveSizes","itemSize","setItemSize","orderQty","setOrderQty","purchaseDS","setPurchaseDS","fetchItems","getDocs","data","docs","map","d","id","alert","handleCloseAp","prevState","handleOpenAp","handleCreateItem","isNaN","itemToAdd","categoryName","uuid","parseFloat","originalStock","totalCost","addDoc","handleDeleteItem","itemsDoc","doc","deleteDoc","handleEditItem","newValues","itemDoc","updateDoc","currencyFunc","value","parts","Math","round","Number","toString","split","replace","handleClosePurchaseD","handleAddToCart","item","JSON","parse","localStorage","getItem","additionalFee","newData","productId","orderId","qty","orderPrice","toFixed","username","createdAt","Date","getTime","arr","setItem","stringify","generateRandomColor","floor","random","useEffect","selectedItem","setState","handleItemSize","e","target","purchaseDState","dialogState","productstate","Grid","className","container","justifyContent","onClick","xs","ArrowBack","Button","variant","color","Add","Typography","spacing","filter","product","idx","key","Card","sx","maxWidth","style","backgroundColor","CardContent","ShoppingBasket","Switch","disabled","checked","name","inputProps","CardActions","Tooltip","placement","EditOutlined","Delete","PurchaseDialog","Dialog","open","onClose","DialogContent","TextField","fullWidth","label","placeholder","type","onChange","FormControl","component","FormLabel","RadioGroup","aria-label","FormControlLabel","control","Radio","DialogActions","ApDialog","disableBackdropClick","disableEscapeKeyDown","DialogTitle","DashboardPage","adminOrders","setAdminOrders","fetchAdminOrders","length","sum","array","obj","orders","order","push","reduce","a","b","handleTotalSales","i","handleTotalCost","theme","imgBGC","selectCategory","categories","setCategories","addDialog","setAddDialog","setImageUrls","imagesListRef","ref","getCategories","handleCreateCategory","newCategory","categoryDescription","handleCloseAddDialog","listAll","then","response","forEach","getDownloadURL","url","prev","handleDeleteCategory","categoryDoc","Dashboard","sort","AddDialog","setCategoryName","setCategoryDescription","handleClose","TextareaAutosize","minRows","OrdersPage","setOrders","products","setProducts","fetchData","myData","val","handleRemoveOrder","selectedProduct","itm","handleBuyOrders","ordersToSave","orderBy","removeItem","arrayTwo","purchaseId","listOfOrders","dataToDisplay","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","paddingTop","PersistentDrawerLeft","state","showProducts","showCategories","showUser","showSetUsernameDialog","showOrders","handleDrawerOpen","handleDrawerClose","handleShowProducts","handleSelectCategory","handleBackToCategories","handleRoles","handleOpenSetUserNameDialog","handleCloseSetUserNameDialog","handleSetUserName","handleSubmit","handleShowOrders","this","CssBaseline","onHandleClose","onHandleSetUserName","onSubmit","AppBar","position","classNames","appBar","appBarShift","Toolbar","disableGutters","IconButton","menuButton","hide","noWrap","paddingRight","Drawer","drawer","anchor","paper","drawerPaper","drawerHeader","direction","Divider","Select","MenuItem","content","contentShift","Orders","React","Component","display","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","easeOut","enteringScreen","marginRight","flexShrink","alignItems","mixins","toolbar","flexGrow","unit","SetUsernameDialog","App","Home","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.a5116af9.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from \"@firebase/firestore\";\r\nimport { getStorage } from \"firebase/storage\";\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBy9d7riht6uJ4uumgVGZPLobozIfIvZCc\",\r\n  authDomain: \"xyz-resto.firebaseapp.com\",\r\n  databaseURL: \"https://xyz-resto-default-rtdb.firebaseio.com\",\r\n  projectId: \"xyz-resto\",\r\n  storageBucket: \"xyz-resto.appspot.com\",\r\n  messagingSenderId: \"360461521290\",\r\n  appId: \"1:360461521290:web:213dce26e47720634ef873\",\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getFirestore(app);\r\nconst storage = getStorage(app);\r\n\r\nexport { db, storage };\r\n","import { db } from \"./db\";\r\nimport { collection } from \"firebase/firestore\";\r\n\r\nconst categoriesCollectionRef = collection(db, \"Categories\");\r\nconst itemsCollectionsRef = collection(db, \"Products\");\r\nconst ordersCollectionsRef = collection(db, \"Orders\");\r\n\r\nexport { categoriesCollectionRef, itemsCollectionsRef, ordersCollectionsRef };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Typography,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  CardActions,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  Tooltip,\r\n  FormControl,\r\n  FormLabel,\r\n  FormControlLabel,\r\n  Radio,\r\n  RadioGroup,\r\n  Switch,\r\n} from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Add,\r\n  ArrowBack,\r\n  Delete,\r\n  EditOutlined,\r\n  ShoppingBasket,\r\n} from \"@material-ui/icons\";\r\nimport uuid from \"react-uuid\";\r\nimport { db } from \"../db\";\r\nimport { itemsCollectionsRef } from \"../collections\";\r\nimport { getDocs, addDoc, deleteDoc, doc, updateDoc } from \"firebase/firestore\";\r\nconst styles = () => ({\r\n  root: {\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    textAlign: \"center\",\r\n  },\r\n  imageStyle: {\r\n    width: \"inherit\",\r\n    height: \" 400px\",\r\n  },\r\n  starterText: {\r\n    fontSize: \"1rem\",\r\n  },\r\n  categoryTextGrid: {\r\n    paddingBottom: 20,\r\n  },\r\n  categoryContainerGrid: {\r\n    paddingBottom: 20,\r\n  },\r\n  btnStarterGrid: {\r\n    textAlign: \"center\",\r\n  },\r\n  backBtn: {\r\n    cursor: \"pointer\",\r\n  },\r\n});\r\nfunction Products(props) {\r\n  const { classes, category, backBtn, userRole, guestUser } = props;\r\n  const [apDialogState, setAPState] = useState(false);\r\n  const [items, setItems] = useState([]);\r\n  const [recipeName, setRecipeName] = useState(\"\");\r\n  const [stock, setStock] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [cost, setCost] = useState(\"\"); // Ingredients * Quantity/Stock\r\n  const [addOns, setAddOns] = useState([]);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [selectedItemForEdit, setItemForEdit] = useState({});\r\n  const [haveSizes, setHaveSizes] = useState(false);\r\n\r\n  const [itemSize, setItemSize] = useState(\"small\");\r\n  const [orderQty, setOrderQty] = useState(0);\r\n  const [purchaseDS, setPurchaseDS] = useState(false);\r\n\r\n  const fetchItems = async () => {\r\n    try {\r\n      const data = await getDocs(itemsCollectionsRef);\r\n      setItems(data.docs.map((d) => ({ ...d.data(), id: d.id })));\r\n    } catch (err) {\r\n      alert(`Error: ${err}`);\r\n    }\r\n  };\r\n\r\n  const resetState = () => {\r\n    setRecipeName(\"\");\r\n    setStock(0);\r\n    setPrice(0);\r\n    setAddOns([]);\r\n    setCost(0);\r\n    setHaveSizes(false);\r\n  };\r\n\r\n  const handleCloseAp = () => {\r\n    setIsEdit(false);\r\n    resetState();\r\n    setAPState((prevState) => !prevState);\r\n  };\r\n\r\n  const handleOpenAp = () => {\r\n    setAPState((prevState) => !prevState);\r\n  };\r\n  const handleTotalCost = () => {\r\n    if (selectedItemForEdit.originalStock < stock) {\r\n      return (\r\n        selectedItemForEdit.totalCost +\r\n        (stock - selectedItemForEdit.originalStock) * selectedItemForEdit.cost\r\n      );\r\n    }\r\n    return (\r\n      selectedItemForEdit.totalCost -\r\n      (selectedItemForEdit.originalStock - stock) * selectedItemForEdit.cost\r\n    );\r\n  };\r\n  const handleCreateItem = async () => {\r\n    try {\r\n      if (recipeName === \"\" || price === 0 || stock === 0)\r\n        return alert(\"All fields are required except addons!\");\r\n      if (isNaN(price) || isNaN(stock))\r\n        return alert(\"Price or Stock must be a number!\");\r\n      const itemToAdd = {\r\n        categoryName: category.categoryName,\r\n        id: uuid(),\r\n        recipeName,\r\n        stock,\r\n        price: parseFloat(price),\r\n        cost: parseFloat(cost),\r\n        addOns,\r\n        haveSizes,\r\n        originalStock: stock,\r\n        totalCost: stock * parseFloat(cost),\r\n      };\r\n      await addDoc(itemsCollectionsRef, itemToAdd);\r\n      alert(\"Create successful\");\r\n      fetchItems();\r\n      handleCloseAp();\r\n\r\n      return;\r\n    } catch (err) {\r\n      alert(`Error: ${err}`);\r\n    }\r\n  };\r\n\r\n  const handleDeleteItem = async (id) => {\r\n    try {\r\n      const itemsDoc = doc(db, \"Products\", id);\r\n      await deleteDoc(itemsDoc);\r\n      alert(\"Delete successful\");\r\n      fetchItems();\r\n      return;\r\n    } catch (err) {\r\n      alert(`Error: ${err}`);\r\n    }\r\n  };\r\n\r\n  const handleEditItem = async () => {\r\n    try {\r\n      if (recipeName === \"\" || price === 0 || stock === 0)\r\n        return alert(\"All fields are required except addons!\");\r\n      if (isNaN(price) || isNaN(stock))\r\n        return alert(\"Price or Stock must be a number!\");\r\n      const id = selectedItemForEdit.id;\r\n      const newValues = {\r\n        recipeName,\r\n        stock,\r\n        price: parseFloat(price),\r\n        cost: parseFloat(cost),\r\n        haveSizes,\r\n        originalStock: stock,\r\n        totalCost: handleTotalCost(),\r\n      };\r\n      const itemDoc = doc(db, \"Products\", id);\r\n      await updateDoc(itemDoc, newValues);\r\n      alert(\"Edit successful\");\r\n      fetchItems();\r\n      handleCloseAp();\r\n      return;\r\n    } catch (err) {}\r\n  };\r\n\r\n  const currencyFunc = (value) => {\r\n    let val = Math.round(Number(value) * 100) / 100;\r\n\r\n    let parts = val.toString().split(\".\");\r\n\r\n    return `$${\r\n      parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") +\r\n      (parts[1] ? \".\" + parts[1] : \"\")\r\n    }`;\r\n  };\r\n\r\n  const handleOpenEp = () => {\r\n    handleOpenAp();\r\n    setIsEdit(true);\r\n  };\r\n\r\n  const handleItemSize = (e) => {\r\n    setItemSize(e.target.value);\r\n  };\r\n\r\n  const handleOpenPurchaseD = () => {\r\n    setPurchaseDS(true);\r\n  };\r\n\r\n  const handleClosePurchaseD = () => {\r\n    setOrderQty(0);\r\n    setItemSize(\"small\");\r\n    setPurchaseDS(false);\r\n  };\r\n\r\n  const handleAddToCart = async () => {\r\n    let item = JSON.parse(localStorage.getItem(\"AddedItem\"));\r\n    if (selectedItemForEdit.stock <= 0) return alert(\"Out of stock!\");\r\n    if (selectedItemForEdit.stock < orderQty)\r\n      return alert(\"Insufficient stock!\");\r\n    const itemDoc = doc(db, \"Products\", selectedItemForEdit.id);\r\n    await updateDoc(itemDoc, { stock: selectedItemForEdit.stock - orderQty });\r\n    let additionalFee = 0;\r\n    if (itemSize === \"medium\") additionalFee = 2;\r\n    if (itemSize === \"large\") additionalFee = 4;\r\n    const newData = {\r\n      productId: selectedItemForEdit.id,\r\n      recipeName: selectedItemForEdit.recipeName,\r\n      orderId: uuid(),\r\n      qty: orderQty,\r\n      itemSize,\r\n      orderPrice: parseFloat(\r\n        orderQty * (selectedItemForEdit.price + additionalFee)\r\n      ).toFixed(2),\r\n      username: guestUser,\r\n      createdAt: new Date().getTime(),\r\n    };\r\n    let arr = item ? [newData, ...item] : [newData];\r\n    localStorage.setItem(\"AddedItem\", JSON.stringify(arr));\r\n    alert(\"Added to cart!\");\r\n    fetchItems();\r\n    handleClosePurchaseD();\r\n  };\r\n\r\n  const generateRandomColor = () => {\r\n    return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchItems();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <PurchaseDialog\r\n        selectedItem={selectedItemForEdit}\r\n        itemSize={itemSize}\r\n        setState={{ setItemSize, setOrderQty }}\r\n        currencyFunc={currencyFunc}\r\n        handleItemSize={handleItemSize}\r\n        purchaseDState={purchaseDS}\r\n        handleClosePurchaseD={handleClosePurchaseD}\r\n        handleAddToCart={handleAddToCart}\r\n        generateRandomColor={generateRandomColor}\r\n      />\r\n      <ApDialog\r\n        isEdit={isEdit}\r\n        dialogState={apDialogState}\r\n        handleCloseAp={handleCloseAp}\r\n        handleCreateItem={handleCreateItem}\r\n        handleEditItem={handleEditItem}\r\n        category={category}\r\n        productstate={{ recipeName, stock, price, haveSizes, cost }}\r\n        setState={{\r\n          setRecipeName,\r\n          setStock,\r\n          setPrice,\r\n          setAddOns,\r\n          setHaveSizes,\r\n          setCost,\r\n        }}\r\n        selectedItemForEdit={selectedItemForEdit}\r\n      />\r\n      <Grid className={classes.root} container justifyContent=\"center\">\r\n        <Grid onClick={backBtn} item xs={12}>\r\n          <ArrowBack className={classes.backBtn} />\r\n        </Grid>\r\n        {/* <Typography className={classes.title} variant=\"h2\">\r\n          {category.categoryName}\r\n        </Typography> */}\r\n        <Grid className={classes.btnStarterGrid} item xs={12}>\r\n          {userRole === \"Admin\" && (\r\n            <Button onClick={handleOpenAp} variant=\"contained\" color=\"primary\">\r\n              <Add />\r\n            </Button>\r\n          )}\r\n        </Grid>\r\n        <Grid container>\r\n          <Grid className={classes.categoryTextGrid} item xs={12}>\r\n            <Typography className={classes.starterText} variant=\"caption\">\r\n              STARTERS\r\n            </Typography>\r\n          </Grid>\r\n          <Grid\r\n            className={classes.categoryContainerGrid}\r\n            container\r\n            justifyContent=\"center\"\r\n            spacing={3}\r\n          >\r\n            {items\r\n              .filter(\r\n                (product) => product.categoryName === category.categoryName\r\n              )\r\n              .map((product, idx) => (\r\n                <Grid key={product.id} item xs={4}>\r\n                  <Card sx={{ maxWidth: 345 }}>\r\n                    <div\r\n                      style={{\r\n                        height: 140,\r\n                        backgroundColor: generateRandomColor(),\r\n                      }}\r\n                    ></div>\r\n                    <CardContent>\r\n                      <Typography variant=\"h5\">{product.recipeName}</Typography>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        <span>\r\n                          Stocks:{\" \"}\r\n                          {product.stock > 0 ? (\r\n                            <b>{product.stock}</b>\r\n                          ) : (\r\n                            <span style={{ color: \"red\" }}>out of stock!</span>\r\n                          )}\r\n                        </span>\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        <span>\r\n                          Price: <b>{currencyFunc(product.price)}</b>\r\n                        </span>\r\n                      </Typography>\r\n                      {userRole === \"Guest\" && (\r\n                        <Grid container justifyContent=\"center\">\r\n                          <Button\r\n                            onClick={() => {\r\n                              handleOpenPurchaseD();\r\n                              setItemForEdit(product);\r\n                            }}\r\n                          >\r\n                            <ShoppingBasket />\r\n                          </Button>\r\n                        </Grid>\r\n                      )}\r\n                      {userRole === \"Admin\" && (\r\n                        <div>\r\n                          <Typography variant=\"body2\" color=\"text.secondary\">\r\n                            <span>\r\n                              Cost: <b>{currencyFunc(product.cost)}</b>\r\n                            </span>\r\n                          </Typography>\r\n                          <Typography variant=\"caption\">Have Sizes?</Typography>\r\n                          <Switch\r\n                            disabled\r\n                            checked={product.haveSizes}\r\n                            name=\"Have Sizes?\"\r\n                            inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                    </CardContent>\r\n                    <CardActions>\r\n                      {userRole === \"Admin\" && (\r\n                        <Grid container>\r\n                          <Grid style={{ textAlign: \"center\" }} item xs={6}>\r\n                            <Tooltip title=\"Edit item\" placement=\"bottom\">\r\n                              <Button\r\n                                onClick={() => {\r\n                                  handleOpenEp();\r\n                                  setItemForEdit(product);\r\n                                  setRecipeName(product.recipeName);\r\n                                  setPrice(product.price);\r\n                                  setStock(product.stock);\r\n                                  setHaveSizes(product.haveSizes);\r\n                                  setCost(product.cost);\r\n                                }}\r\n                              >\r\n                                <EditOutlined />\r\n                              </Button>\r\n                            </Tooltip>\r\n                          </Grid>\r\n                          <Grid style={{ textAlign: \"center\" }} item xs={6}>\r\n                            <Tooltip title=\"Delete Item\" placement=\"bottom\">\r\n                              <Button\r\n                                onClick={() => handleDeleteItem(product.id)}\r\n                              >\r\n                                <Delete />\r\n                              </Button>\r\n                            </Tooltip>\r\n                          </Grid>\r\n                        </Grid>\r\n                      )}\r\n                    </CardActions>\r\n                  </Card>\r\n                </Grid>\r\n              ))}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\nProducts.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n};\r\nexport default withStyles(styles, { withTheme: true })(Products);\r\n\r\nconst PurchaseDialog = (props) => {\r\n  const {\r\n    selectedItem,\r\n    itemSize,\r\n    setState,\r\n    currencyFunc,\r\n    handleItemSize,\r\n    purchaseDState,\r\n    handleClosePurchaseD,\r\n    handleAddToCart,\r\n    generateRandomColor,\r\n  } = props;\r\n  return (\r\n    <Dialog open={purchaseDState} onClose={handleClosePurchaseD}>\r\n      <DialogContent>\r\n        <Card sx={{ maxWidth: 345 }}>\r\n          <div\r\n            style={{\r\n              height: 140,\r\n              backgroundColor: generateRandomColor(),\r\n            }}\r\n          ></div>\r\n          <CardContent>\r\n            <Typography variant=\"h5\">{selectedItem.recipeName}</Typography>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              <span>\r\n                Stocks:{\" \"}\r\n                {selectedItem.stock > 0 ? (\r\n                  <b>{selectedItem.stock}</b>\r\n                ) : (\r\n                  <span style={{ color: \"red\" }}>out of stock!</span>\r\n                )}\r\n              </span>\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              <span>\r\n                Price: <b>{currencyFunc(selectedItem.price)}</b>\r\n              </span>\r\n            </Typography>\r\n            <Grid container>\r\n              <Grid style={{ paddingBottom: 20 }} item xs={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Qty\"\r\n                  placeholder=\"Enter qty\"\r\n                  type=\"number\"\r\n                  onChange={(e) => setState.setOrderQty(e.target.value)}\r\n                />\r\n              </Grid>\r\n              {selectedItem.haveSizes && (\r\n                <FormControl component=\"fieldset\">\r\n                  <FormLabel component=\"legend\">Size</FormLabel>\r\n                  <RadioGroup\r\n                    aria-label=\"size\"\r\n                    name=\"size\"\r\n                    value={itemSize}\r\n                    onChange={handleItemSize}\r\n                  >\r\n                    <FormControlLabel\r\n                      value=\"small\"\r\n                      control={<Radio />}\r\n                      label=\"Small\"\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"medium\"\r\n                      control={<Radio />}\r\n                      label=\"Medium (additional $2)\"\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"large\"\r\n                      control={<Radio />}\r\n                      label=\"Large (additional $4)\"\r\n                    />\r\n                  </RadioGroup>\r\n                </FormControl>\r\n              )}\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleAddToCart} variant=\"contained\" color=\"primary\">\r\n          Add to Cart\r\n        </Button>\r\n        <Button onClick={handleClosePurchaseD} variant=\"text\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst ApDialog = (props) => {\r\n  const {\r\n    dialogState,\r\n    handleCloseAp,\r\n    category,\r\n    setState,\r\n    handleCreateItem,\r\n    isEdit,\r\n    handleEditItem,\r\n    productstate,\r\n  } = props;\r\n\r\n  return (\r\n    <Dialog\r\n      open={dialogState}\r\n      onClose={handleCloseAp}\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n    >\r\n      <DialogTitle>\r\n        <Typography style={{ textAlign: \"center\" }} variant=\"h4\">\r\n          {!isEdit ? `Add item` : `Edit item`}\r\n        </Typography>\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <Grid container justifyContent=\"center\">\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              //defaultValue={!isEdit ? \"\" : selectedItemForEdit.recipeName}\r\n              value={productstate.recipeName}\r\n              fullWidth\r\n              placeholder=\"e.g Sinigang\"\r\n              label={`${category.categoryName} Name`}\r\n              onChange={(e) => setState.setRecipeName(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              //defaultValue={!isEdit ? \"\" : selectedItemForEdit.stock}\r\n              value={productstate.stock}\r\n              fullWidth\r\n              placeholder=\"Enter number of stocks\"\r\n              label=\"Stocks\"\r\n              onChange={(e) => setState.setStock(Number(e.target.value))}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              //defaultValue={!isEdit ? \"\" : selectedItemForEdit.price}\r\n              value={productstate.price}\r\n              fullWidth\r\n              placeholder=\"Enter item price\"\r\n              label=\"Item Price\"\r\n              onChange={(e) => setState.setPrice(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              //defaultValue={!isEdit ? \"\" : selectedItemForEdit.price}\r\n              value={productstate.cost}\r\n              fullWidth\r\n              placeholder=\"Enter item cost\"\r\n              label=\"Item Cost\"\r\n              onChange={(e) => setState.setCost(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"caption\">Have Sizes?</Typography>\r\n            <Switch\r\n              checked={productstate.haveSizes}\r\n              onChange={(e) => setState.setHaveSizes(e.target.checked)}\r\n              name=\"Have Sizes?\"\r\n              inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          onClick={!isEdit ? handleCreateItem : handleEditItem}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n        >\r\n          {!isEdit ? \"Create\" : \"Edit\"}\r\n        </Button>\r\n        <Button onClick={handleCloseAp} variant=\"text\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport { getDocs } from \"firebase/firestore\";\r\nimport { itemsCollectionsRef, ordersCollectionsRef } from \"../collections\";\r\nconst DashboardPage = () => {\r\n  const [items, setItems] = useState([]);\r\n  const [adminOrders, setAdminOrders] = useState([]);\r\n  const fetchAdminOrders = async () => {\r\n    try {\r\n      const data = await getDocs(ordersCollectionsRef);\r\n      setAdminOrders(data.docs.map((d) => ({ ...d.data(), id: d.id })));\r\n    } catch (err) {\r\n      alert(`Error: ${err}`);\r\n    }\r\n  };\r\n  const fetchItems = async () => {\r\n    try {\r\n      const data = await getDocs(itemsCollectionsRef);\r\n      setItems(data.docs.map((d) => ({ ...d.data(), id: d.id })));\r\n    } catch (err) {\r\n      alert(`Error: ${err}`);\r\n    }\r\n  };\r\n  const currencyFunc = (value) => {\r\n    let val = Math.round(Number(value) * 100) / 100;\r\n\r\n    let parts = val.toString().split(\".\");\r\n\r\n    return `$${\r\n      parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") +\r\n      (parts[1] ? \".\" + parts[1] : \"\")\r\n    }`;\r\n  };\r\n  const handleTotalCost = () => {\r\n    let sum = 0;\r\n    for (let i = 0; i < items.length; i++) {\r\n      sum += items[i].totalCost;\r\n    }\r\n    return sum;\r\n  };\r\n\r\n  const handleTotalSales = () => {\r\n    let sum = 0;\r\n    let array = [];\r\n    adminOrders &&\r\n      adminOrders.map((obj) =>\r\n        obj.orders.map((order) => {\r\n          return array.push(order);\r\n        })\r\n      );\r\n    if (array.length > 0) {\r\n      sum = array.map((data) => {\r\n        return Number(data.orderPrice);\r\n      });\r\n    }\r\n    return (\r\n      sum &&\r\n      sum.reduce((a, b) => {\r\n        return a + b;\r\n      })\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    fetchItems();\r\n    fetchAdminOrders();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Grid spacing={4} container justifyContent=\"center\">\r\n        <Grid item xs={4}>\r\n          <div\r\n            style={{\r\n              maxWidth: 300,\r\n              width: 300,\r\n              height: 130,\r\n            }}\r\n          >\r\n            <Typography style={{ textAlign: \"center\" }} variant=\"h4\">\r\n              Total Orders\r\n            </Typography>\r\n            <Typography style={{ textAlign: \"center\" }} variant=\"h5\">\r\n              {adminOrders.length}\r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <div\r\n            style={{\r\n              maxWidth: 300,\r\n              width: 300,\r\n              height: 130,\r\n            }}\r\n          >\r\n            <Typography style={{ textAlign: \"center\" }} variant=\"h4\">\r\n              Total Sales\r\n            </Typography>\r\n            <Typography style={{ textAlign: \"center\" }} variant=\"h5\">\r\n              {currencyFunc(handleTotalSales())}\r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <div\r\n            style={{\r\n              maxWidth: 300,\r\n              width: 300,\r\n              height: 130,\r\n            }}\r\n          >\r\n            <Typography style={{ textAlign: \"center\" }} variant=\"h4\">\r\n              Total Cost\r\n            </Typography>\r\n            <Typography style={{ textAlign: \"center\" }} variant=\"h5\">\r\n              {currencyFunc(handleTotalCost())}\r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardPage;\r\n","import {\r\n  Typography,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  CardActions,\r\n  Button,\r\n  Tooltip,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  TextareaAutosize,\r\n} from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Add, Delete } from \"@material-ui/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { db, storage } from \"../db\";\r\nimport { getDocs, addDoc, deleteDoc, doc } from \"firebase/firestore\";\r\nimport { ref, getDownloadURL, listAll } from \"firebase/storage\";\r\nimport uuid from \"react-uuid\";\r\nimport DashboardPage from \"./Dashboard\";\r\nimport { categoriesCollectionRef } from \"../collections\";\r\nconst styles = (theme) => ({\r\n  root: {\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    textAlign: \"center\",\r\n  },\r\n  imageStyle: {\r\n    width: \"inherit\",\r\n    height: \" 400px\",\r\n  },\r\n  starterText: {\r\n    fontSize: \"1rem\",\r\n  },\r\n  categoryTextGrid: {\r\n    paddingBottom: 20,\r\n  },\r\n  categoryContainerGrid: {\r\n    paddingBottom: 20,\r\n  },\r\n  btnStarterGrid: {\r\n    textAlign: \"center\",\r\n  },\r\n  imgBGC: {\r\n    backgroundColor: \"red\",\r\n  },\r\n});\r\nfunction Categories(props) {\r\n  const { classes, selectCategory, userRole } = props;\r\n  const [categories, setCategories] = useState([]);\r\n  const [addDialog, setAddDialog] = useState(false);\r\n  const [imageUrls, setImageUrls] = useState([]);\r\n\r\n  const imagesListRef = ref(storage, \"images/\");\r\n\r\n  useEffect(() => {\r\n    getCategories();\r\n  }, []);\r\n\r\n  const getImagesForCategories = () => {\r\n    listAll(imagesListRef).then((response) => {\r\n      response.items.forEach((item) => {\r\n        getDownloadURL(item).then((url) => {\r\n          setImageUrls((prev) => [...prev, url]);\r\n        });\r\n      });\r\n    });\r\n  };\r\n  const getCategories = async () => {\r\n    try {\r\n      const data = await getDocs(categoriesCollectionRef);\r\n      setCategories(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\r\n    } catch (err) {\r\n      alert(`Error: ${err}`);\r\n    }\r\n  };\r\n\r\n  const handleCreateCategory = async (newCategory) => {\r\n    try {\r\n      if (\r\n        newCategory.categoryDescription !== \"\" ||\r\n        newCategory.categoryName !== \"\"\r\n      ) {\r\n        await addDoc(categoriesCollectionRef, newCategory);\r\n        handleCloseAddDialog();\r\n        alert(\"Create successful!\");\r\n        getCategories();\r\n        getImagesForCategories();\r\n        return;\r\n      }\r\n      alert(\"All fields are required!\");\r\n    } catch (err) {\r\n      alert(`Error: ${err}`);\r\n    }\r\n  };\r\n  const handleAddDialog = () => {\r\n    setAddDialog((prevState) => !prevState);\r\n  };\r\n  const handleCloseAddDialog = () => {\r\n    setAddDialog((prevState) => !prevState);\r\n  };\r\n\r\n  const handleDeleteCategory = async (id) => {\r\n    try {\r\n      const categoryDoc = doc(db, \"Categories\", id);\r\n      await deleteDoc(categoryDoc);\r\n      alert(\"Delete successful!\");\r\n      getCategories();\r\n      return;\r\n    } catch (err) {\r\n      alert(`Error: ${err}`);\r\n    }\r\n  };\r\n\r\n  // const handleUpload = (newCategory) => {\r\n  //   if (newCategory.categoryImage == null) return;\r\n  //   const imageRef = ref(storage, `images/${newCategory.id}`);\r\n  //   uploadBytes(imageRef, newCategory.categoryImage).then((snapshot) => {\r\n  //     getDownloadURL(snapshot.ref).then((url) => {\r\n  //       setImageUrls((prev) => [...prev, url]);\r\n  //     });\r\n  //   });\r\n  // };\r\n\r\n  const generateRandomColor = () => {\r\n    return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AddDialog\r\n        //handleUpload={handleUpload}\r\n        handleCloseAddDialog={handleCloseAddDialog}\r\n        dialogState={addDialog}\r\n        handleCreateCategory={handleCreateCategory}\r\n      />\r\n      <Grid className={classes.root} container justifyContent=\"center\">\r\n        <div style={{ paddingBottom: 30 }}>\r\n          {userRole === \"Admin\" && <DashboardPage />}\r\n        </div>\r\n        <Grid\r\n          className={classes.categoryContainerGrid}\r\n          container\r\n          justifyContent=\"center\"\r\n          spacing={3}\r\n        >\r\n          {categories &&\r\n            categories\r\n              .sort((a, b) => {\r\n                return b.createdAt - a.createdAt;\r\n              })\r\n              .map((data, idx) => (\r\n                <Grid style={{ cursor: \"pointer\" }} key={data.id} item xs={4}>\r\n                  <Card sx={{ maxWidth: 345 }}>\r\n                    <div\r\n                      onClick={() => selectCategory(data)}\r\n                      style={{\r\n                        height: 140,\r\n                        backgroundColor: generateRandomColor(),\r\n                      }}\r\n                    ></div>\r\n                    <CardContent onClick={() => selectCategory(data)}>\r\n                      <Typography variant=\"h5\">{data.categoryName}</Typography>\r\n                      <Typography variant=\"body2\">\r\n                        {data.categoryDescription}\r\n                      </Typography>\r\n                    </CardContent>\r\n                    <CardActions>\r\n                      <Grid style={{ textAlign: \"right\" }} item xs={12}>\r\n                        {userRole === \"Admin\" && (\r\n                          <Tooltip title=\"Delete Category\" placement=\"bottom\">\r\n                            <Button\r\n                              onClick={() => handleDeleteCategory(data.id)}\r\n                            >\r\n                              <Delete />\r\n                            </Button>\r\n                          </Tooltip>\r\n                        )}\r\n                      </Grid>\r\n                    </CardActions>\r\n                  </Card>\r\n                </Grid>\r\n              ))}\r\n        </Grid>\r\n        <Grid style={{ textAlign: \"right\" }} item xs={12}>\r\n          {userRole === \"Admin\" && (\r\n            <Tooltip title=\"Add Category\" placement=\"bottom\">\r\n              <Button onClick={handleAddDialog} variant=\"text\">\r\n                <Add />\r\n              </Button>\r\n            </Tooltip>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\nCategories.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n};\r\nexport default withStyles(styles, { withTheme: true })(Categories);\r\n\r\nconst AddDialog = (props) => {\r\n  const { dialogState, handleCloseAddDialog, handleCreateCategory } = props;\r\n  const [categoryName, setCategoryName] = useState(\"\");\r\n  const [categoryDescription, setCategoryDescription] = useState(\"\");\r\n  const handleClose = () => {\r\n    setCategoryDescription(\"\");\r\n    setCategoryName(\"\");\r\n    handleCloseAddDialog();\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={dialogState}\r\n      onClose={handleClose}\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n    >\r\n      <DialogTitle>\r\n        <Typography style={{ textAlign: \"center\" }} variant=\"h4\">\r\n          Add New Category\r\n        </Typography>\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <Grid container justifyContent=\"center\">\r\n          {/* <Grid style={{ paddingBottom: 10 }} item xs={12}>\r\n            <input type=\"file\" onChange={handleChange} />\r\n          </Grid> */}\r\n          <Grid style={{ paddingBottom: 10 }} item xs={12}>\r\n            <TextField\r\n              fullWidth\r\n              placeholder=\"e.g. Soup\"\r\n              label=\"Category Name\"\r\n              onChange={(e) => setCategoryName(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid style={{ paddingBottom: 10 }} item xs={12}>\r\n            <TextareaAutosize\r\n              aria-label=\"minimum height\"\r\n              minRows={3}\r\n              placeholder=\"e.g Lorem Epsum\"\r\n              style={{ width: \"100%\" }}\r\n              label=\"Description\"\r\n              onChange={(e) => setCategoryDescription(e.target.value)}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          onClick={() => {\r\n            setCategoryDescription(\"\");\r\n            setCategoryName(\"\");\r\n            handleCreateCategory({\r\n              id: uuid(),\r\n              categoryName,\r\n              categoryDescription,\r\n              createdAt: new Date().getTime(),\r\n            });\r\n          }}\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n        >\r\n          Create\r\n        </Button>\r\n        <Button onClick={handleClose}>Cancel</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { ArrowBack, Delete } from \"@material-ui/icons\";\r\nimport {\r\n  Grid,\r\n  Tooltip,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Button,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { itemsCollectionsRef, ordersCollectionsRef } from \"../collections\";\r\nimport { getDocs, doc, updateDoc, addDoc } from \"firebase/firestore\";\r\nimport { db } from \"../db\";\r\nimport uuid from \"react-uuid\";\r\nconst OrdersPage = (props) => {\r\n  const { backBtn, userRole, guestUser } = props;\r\n\r\n  const [orders, setOrders] = useState();\r\n  const [products, setProducts] = useState([]);\r\n  const [adminOrders, setAdminOrders] = useState([]);\r\n  const title = guestUser ? `${guestUser}'s Cart` : `My Cart`;\r\n\r\n  const fetchAdminOrders = async () => {\r\n    try {\r\n      const data = await getDocs(ordersCollectionsRef);\r\n      setAdminOrders(data.docs.map((d) => ({ ...d.data(), id: d.id })));\r\n    } catch (err) {\r\n      alert(`Error: ${err}`);\r\n    }\r\n  };\r\n  const fetchItems = async () => {\r\n    try {\r\n      const data = await getDocs(itemsCollectionsRef);\r\n      setProducts(data.docs.map((d) => ({ ...d.data(), id: d.id })));\r\n    } catch (err) {\r\n      alert(`Error: ${err}`);\r\n    }\r\n  };\r\n  const fetchData = () => {\r\n    let myData = [];\r\n    if (userRole === \"Guest\") {\r\n      let arr = JSON.parse(localStorage.getItem(\"AddedItem\"));\r\n      myData = arr && arr.filter((val, idx) => val.username === guestUser);\r\n      setOrders(myData);\r\n    } else {\r\n      setOrders(adminOrders);\r\n    }\r\n  };\r\n  const currencyFunc = (value) => {\r\n    let val = Math.round(Number(value) * 100) / 100;\r\n\r\n    let parts = val.toString().split(\".\");\r\n\r\n    return `$${\r\n      parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") +\r\n      (parts[1] ? \".\" + parts[1] : \"\")\r\n    }`;\r\n  };\r\n  const handleRemoveOrder = async (order) => {\r\n    try {\r\n      let item = orders;\r\n\r\n      const selectedProduct = products.filter(\r\n        (product) => product.id === order.productId\r\n      );\r\n      const itemDoc = doc(db, \"Products\", selectedProduct[0].id);\r\n\r\n      await updateDoc(itemDoc, {\r\n        stock: selectedProduct[0].stock + Number(order.qty),\r\n      });\r\n\r\n      let arr = item.filter((itm) => itm.orderId !== order.orderId);\r\n\r\n      localStorage.setItem(\"AddedItem\", JSON.stringify(arr));\r\n      fetchData();\r\n      alert(`Remove item successful!`);\r\n    } catch (err) {\r\n      alert(`Error: ${err}`);\r\n    }\r\n  };\r\n\r\n  const handleBuyOrders = async () => {\r\n    const ordersToSave = {\r\n      orders,\r\n      orderBy: guestUser,\r\n      id: uuid(),\r\n      createdAt: new Date().getTime(),\r\n    };\r\n    try {\r\n      await addDoc(ordersCollectionsRef, ordersToSave);\r\n      localStorage.removeItem(\"AddedItem\");\r\n      fetchAdminOrders();\r\n      fetchData();\r\n      alert(\"Purchased!\");\r\n      return;\r\n    } catch (err) {\r\n      alert(`Error: ${err}`);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n\r\n    fetchItems();\r\n    fetchAdminOrders();\r\n  }, [userRole, guestUser]);\r\n\r\n  let array = [];\r\n  let arrayTwo = [];\r\n  let dataToMap = adminOrders;\r\n  dataToMap.map((obj) => {\r\n    return obj.orders.map((order) => {\r\n      let createdAt = obj.orderBy === order.username && obj.createdAt;\r\n\r\n      return array.push({ purchaseId: obj.id, createdAt, listOfOrders: order });\r\n    });\r\n  });\r\n\r\n  orders &&\r\n    orders.map((obj) => {\r\n      return arrayTwo.push({ createdAt: obj.createdAt, listOfOrders: obj });\r\n    });\r\n\r\n  const dataToDisplay = userRole === \"Admin\" ? array : arrayTwo;\r\n\r\n  return (\r\n    <div>\r\n      <Grid container justifyContent=\"center\">\r\n        <Grid item xs={12}>\r\n          <Tooltip title=\"Back to categories\" placement=\"bottom\">\r\n            <Button onClick={backBtn}>\r\n              <ArrowBack style={{ cursor: \"pointer\" }} />\r\n            </Button>\r\n          </Tooltip>\r\n        </Grid>\r\n        <Grid style={{ paddingBottom: 20 }} item xs={12}>\r\n          {userRole === \"Guest\" ? (\r\n            <Typography variant=\"h4\">{title}</Typography>\r\n          ) : (\r\n            <Typography variant=\"h4\">List of Orders</Typography>\r\n          )}\r\n        </Grid>\r\n        {dataToDisplay && dataToDisplay.length > 0 ? (\r\n          <Grid container justifyContent=\"center\">\r\n            <Grid item xs={12}>\r\n              <TableContainer component={Paper}>\r\n                <Table>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Order ID</TableCell>\r\n                      {userRole === \"Admin\" && (\r\n                        <TableCell>Purchased By</TableCell>\r\n                      )}\r\n                      <TableCell>Item Name</TableCell>\r\n                      <TableCell>Quantity</TableCell>\r\n                      <TableCell>Item Size</TableCell>\r\n                      <TableCell>Price</TableCell>\r\n                      {userRole === \"Guest\" && <TableCell>Actions</TableCell>}\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {dataToDisplay &&\r\n                      dataToDisplay\r\n                        .sort((a, b) => {\r\n                          return b.createdAt - a.createdAt;\r\n                        })\r\n                        .map((order) => (\r\n                          <TableRow key={order.listOfOrders.orderId}>\r\n                            <TableCell>{order.listOfOrders.orderId}</TableCell>\r\n                            {userRole === \"Admin\" && (\r\n                              <TableCell>\r\n                                {order.listOfOrders.username}\r\n                              </TableCell>\r\n                            )}\r\n                            <TableCell>\r\n                              {order.listOfOrders.recipeName}\r\n                            </TableCell>\r\n                            <TableCell>{order.listOfOrders.qty}</TableCell>\r\n                            <TableCell>{order.listOfOrders.itemSize}</TableCell>\r\n                            <TableCell>\r\n                              {currencyFunc(order.listOfOrders.orderPrice)}\r\n                            </TableCell>\r\n                            {userRole === \"Guest\" && (\r\n                              <TableCell>\r\n                                <Tooltip title=\"Remove item\" placement=\"bottom\">\r\n                                  <Button\r\n                                    onClick={() => handleRemoveOrder(order)}\r\n                                  >\r\n                                    <Delete />\r\n                                  </Button>\r\n                                </Tooltip>\r\n                              </TableCell>\r\n                            )}\r\n                          </TableRow>\r\n                        ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Grid>\r\n            <Grid style={{ textAlign: \"right\", paddingTop: 20 }} item xs={12}>\r\n              {userRole === \"Guest\" && (\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={handleBuyOrders}\r\n                >\r\n                  Buy Items\r\n                </Button>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        ) : (\r\n          <Typography variant=\"h2\">No Orders!</Typography>\r\n        )}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrdersPage;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { ShoppingBasket } from \"@material-ui/icons\";\r\n//Components\r\nimport Products from \"./Products\";\r\nimport Categories from \"./Categories\";\r\nimport OrdersPage from \"./Orders\";\r\nconst drawerWidth = 240;\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginLeft: 12,\r\n    marginRight: 20,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing.unit * 3,\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n});\r\n\r\nclass PersistentDrawerLeft extends React.Component {\r\n  state = {\r\n    open: false,\r\n    showProducts: false,\r\n    showCategories: true,\r\n    category: \"\",\r\n    userRole: \"Admin\",\r\n    guestUser: \"\",\r\n    showUser: false,\r\n    showSetUsernameDialog: false,\r\n    showOrders: false,\r\n  };\r\n\r\n  handleDrawerOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleDrawerClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  handleShowProducts = () => {\r\n    this.setState({ showProducts: true, showCategories: false });\r\n  };\r\n\r\n  handleSelectCategory = (category) => {\r\n    this.setState({ category });\r\n    this.handleShowProducts();\r\n  };\r\n\r\n  handleBackToCategories = () => {\r\n    this.setState({\r\n      showProducts: false,\r\n      showCategories: true,\r\n      showOrders: false,\r\n    });\r\n  };\r\n  handleRoles = (e) => {\r\n    this.setState({ userRole: e.target.value });\r\n  };\r\n\r\n  handleOpenSetUserNameDialog = () => {\r\n    const { guestUser } = this.state;\r\n    if (!guestUser) {\r\n      this.setState({ showSetUsernameDialog: true });\r\n    }\r\n  };\r\n\r\n  handleCloseSetUserNameDialog = () => {\r\n    this.setState({ showSetUsernameDialog: false });\r\n  };\r\n\r\n  handleSetUserName = (e) => {\r\n    this.setState({ guestUser: e.target.value });\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    this.handleCloseSetUserNameDialog();\r\n    this.setState({ showUser: true });\r\n  };\r\n\r\n  handleShowOrders = () => {\r\n    this.setState({\r\n      showOrders: true,\r\n      showProducts: false,\r\n      showCategories: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { classes, theme } = this.props;\r\n    const { open, userRole, showSetUsernameDialog, guestUser, showUser } =\r\n      this.state;\r\n    return (\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <SetUsernameDialog\r\n          dialogState={showSetUsernameDialog}\r\n          onHandleClose={this.handleCloseSetUserNameDialog}\r\n          onHandleSetUserName={this.handleSetUserName}\r\n          onSubmit={this.handleSubmit}\r\n        />\r\n        <AppBar\r\n          position=\"fixed\"\r\n          className={classNames(classes.appBar, {\r\n            [classes.appBarShift]: open,\r\n          })}\r\n        >\r\n          <Toolbar disableGutters={!open}>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"Open drawer\"\r\n              onClick={this.handleDrawerOpen}\r\n              className={classNames(classes.menuButton, open && classes.hide)}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Grid container>\r\n              <Grid item xs={4}>\r\n                <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                  XYZ Resto\r\n                </Typography>\r\n              </Grid>\r\n              <Grid style={{ textAlign: \"center\" }} item xs={4}>\r\n                {showUser && guestUser && (\r\n                  <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                    {`Welcome: ${guestUser}`}\r\n                  </Typography>\r\n                )}\r\n              </Grid>\r\n              <Grid\r\n                style={{ textAlign: \"right\", paddingRight: 15 }}\r\n                item\r\n                xs={4}\r\n              >\r\n                <Button onClick={this.handleShowOrders}>\r\n                  <ShoppingBasket />\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant=\"persistent\"\r\n          anchor=\"left\"\r\n          open={open}\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n        >\r\n          <div className={classes.drawerHeader}>\r\n            <IconButton onClick={this.handleDrawerClose}>\r\n              {theme.direction === \"ltr\" ? (\r\n                <ChevronLeftIcon />\r\n              ) : (\r\n                <ChevronRightIcon />\r\n              )}\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <Select onChange={this.handleRoles} value={userRole}>\r\n            <MenuItem\r\n              onClick={() =>\r\n                this.setState({\r\n                  guestUser: \"\",\r\n                })\r\n              }\r\n              value=\"Admin\"\r\n            >\r\n              Admin\r\n            </MenuItem>\r\n            <MenuItem onClick={this.handleOpenSetUserNameDialog} value=\"Guest\">\r\n              Guest\r\n            </MenuItem>\r\n          </Select>\r\n          <Divider />\r\n        </Drawer>\r\n        <main\r\n          className={classNames(classes.content, {\r\n            [classes.contentShift]: open,\r\n          })}\r\n        >\r\n          <div className={classes.drawerHeader} />\r\n          {this.state.showCategories && (\r\n            <Categories\r\n              selectCategory={this.handleSelectCategory}\r\n              userRole={userRole}\r\n            />\r\n          )}\r\n          {this.state.showProducts && (\r\n            <Products\r\n              userRole={userRole}\r\n              backBtn={this.handleBackToCategories}\r\n              category={this.state.category}\r\n              guestUser={guestUser}\r\n            />\r\n          )}\r\n          {this.state.showOrders && (\r\n            <OrdersPage\r\n              userRole={userRole}\r\n              backBtn={this.handleBackToCategories}\r\n              guestUser={guestUser}\r\n            />\r\n          )}\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPersistentDrawerLeft.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(PersistentDrawerLeft);\r\n\r\nconst SetUsernameDialog = (props) => {\r\n  const { onHandleClose, dialogState, onHandleSetUserName, onSubmit } = props;\r\n  return (\r\n    <Dialog\r\n      open={dialogState}\r\n      onClose={onHandleClose}\r\n      disableEscapeKeyDown\r\n      disableBackdropClick\r\n    >\r\n      <DialogContent>\r\n        <TextField\r\n          label=\"Name\"\r\n          placeholder=\"Enter name\"\r\n          onChange={onHandleSetUserName}\r\n          style={{ width: 300 }}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onSubmit} color=\"primary\" variant=\"contained\">\r\n          Enter as guest\r\n        </Button>\r\n        <Button onClick={onHandleClose} variant=\"text\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n","import React from \"react\";\nimport HomePage from \"./Components/Home\";\n\nfunction App() {\n  return (\n    <div>\n      <HomePage />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\n\nconst root = createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}